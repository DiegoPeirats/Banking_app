package com.diego_peirats.infrastructure.configuration;

import java.security.Key;
import java.sql.Date;
import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Component;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;

@Component
public class JwtTokenProvider {
	
	@Value("${app.jwt-secret}")
	private String jwtSecret;
	
	@Value("${app.jwt-expiration}")
	private Long jwtExpirationDate;
	
	public String generateToken(Authentication authentication) {
		String username = authentication.getName();
		Date currentDate = Date.valueOf(LocalDate.now());
		Date expireDate = new Date(currentDate.getTime() + jwtExpirationDate);
		
		return Jwts.builder()
				.setSubject(username)
				.setIssuedAt(currentDate)
				.setExpiration(expireDate)
				.signWith(key())
				.compact();
	}
	
	private Key key() {
		byte[] bytes = Decoders.BASE64.decode((jwtSecret));
		return Keys.hmacShaKeyFor(bytes);
	}
	
	public String getUsername(String token) {
		return null;
	}

}
